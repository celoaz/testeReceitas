/*
 * This file is generated by jOOQ.
 */
package com.techx.generatedsources.entity.tables;


import com.techx.generatedsources.entity.DefaultSchema;
import com.techx.generatedsources.entity.Indexes;
import com.techx.generatedsources.entity.Keys;
import com.techx.generatedsources.entity.tables.records.RecipeMetadataRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecipeMetadata extends TableImpl<RecipeMetadataRecord> {

    private static final long serialVersionUID = 1616510033;

    /**
     * The reference instance of <code>recipe_metadata</code>
     */
    public static final RecipeMetadata RECIPE_METADATA = new RecipeMetadata();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RecipeMetadataRecord> getRecordType() {
        return RecipeMetadataRecord.class;
    }

    /**
     * The column <code>recipe_metadata.ID</code>.
     */
    public final TableField<RecipeMetadataRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>recipe_metadata.PREPARATION_TIME_IN_MINUTES</code>.
     */
    public final TableField<RecipeMetadataRecord, Integer> PREPARATION_TIME_IN_MINUTES = createField("PREPARATION_TIME_IN_MINUTES", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>recipe_metadata.NUMBER_OF_SERVINGS</code>.
     */
    public final TableField<RecipeMetadataRecord, Integer> NUMBER_OF_SERVINGS = createField("NUMBER_OF_SERVINGS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>recipe_metadata.ADDITIONAL_NOTES</code>.
     */
    public final TableField<RecipeMetadataRecord, String> ADDITIONAL_NOTES = createField("ADDITIONAL_NOTES", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>recipe_metadata.RECIPE_NAME</code>.
     */
    public final TableField<RecipeMetadataRecord, String> RECIPE_NAME = createField("RECIPE_NAME", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * Create a <code>recipe_metadata</code> table reference
     */
    public RecipeMetadata() {
        this(DSL.name("recipe_metadata"), null);
    }

    /**
     * Create an aliased <code>recipe_metadata</code> table reference
     */
    public RecipeMetadata(String alias) {
        this(DSL.name(alias), RECIPE_METADATA);
    }

    /**
     * Create an aliased <code>recipe_metadata</code> table reference
     */
    public RecipeMetadata(Name alias) {
        this(alias, RECIPE_METADATA);
    }

    private RecipeMetadata(Name alias, Table<RecipeMetadataRecord> aliased) {
        this(alias, aliased, null);
    }

    private RecipeMetadata(Name alias, Table<RecipeMetadataRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RecipeMetadata(Table<O> child, ForeignKey<O, RecipeMetadataRecord> key) {
        super(child, key, RECIPE_METADATA);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RECIPE_METADATA_FK_METADATA_RECIPES, Indexes.RECIPE_METADATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RecipeMetadataRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RECIPE_METADATA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RecipeMetadataRecord> getPrimaryKey() {
        return Keys.KEY_RECIPE_METADATA_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RecipeMetadataRecord>> getKeys() {
        return Arrays.<UniqueKey<RecipeMetadataRecord>>asList(Keys.KEY_RECIPE_METADATA_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<RecipeMetadataRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<RecipeMetadataRecord, ?>>asList(Keys.FK_METADATA_RECIPES);
    }

    public Recipes recipes() {
        return new Recipes(this, Keys.FK_METADATA_RECIPES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipeMetadata as(String alias) {
        return new RecipeMetadata(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RecipeMetadata as(Name alias) {
        return new RecipeMetadata(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RecipeMetadata rename(String name) {
        return new RecipeMetadata(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RecipeMetadata rename(Name name) {
        return new RecipeMetadata(name, null);
    }
}
